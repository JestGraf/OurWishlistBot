import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command

# –í—Å—Ç–∞–≤—å—Ç–µ —Å–≤–æ–π —Ç–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = "8127481993:AAEqIAqn6VrSCXDln8kcM2xZiJvxyouDiWQ"

ADMIN_IDS = {197129326, 1082421881}  # –£–∫–∞–∂–∏—Ç–µ Telegram ID –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

bot = Bot(token=TOKEN)
dp = Dispatcher()

# –•—Ä–∞–Ω–∏–º –≤–∏—à–ª–∏—Å—Ç –≤ –ø–∞–º—è—Ç–∏ (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
wishlist = []


def get_wishlist_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏—à–ª–∏—Å—Ç–æ–º."""
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(
                text=f"{'‚úÖ ' if item['gifted'] else ''}{item['name']}",
                callback_data=f"toggle_{idx}"
            )] for idx, item in enumerate(wishlist)
        ]
    )
    if wishlist:
        keyboard.inline_keyboard.append([
            InlineKeyboardButton(text="‚ùå –û—á–∏—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫", callback_data="clear")
        ])
    return keyboard


@dp.message(Command("start"))
async def start_command(message: Message):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start"""
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("–≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–≤—É—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.")
        return
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≤–∞—à —Å–æ–≤–º–µ—Å—Ç–Ω—ã–π –≤–∏—à–ª–∏—Å—Ç. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
                         "/add <—Å—Å—ã–ª–∫–∞> - –¥–æ–±–∞–≤–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫\n"
                         "/list - –ø–æ–∫–∞–∑–∞—Ç—å –≤–∏—à–ª–∏—Å—Ç")


@dp.message(Command("add"))
async def add_item(message: Message):
    """–î–æ–±–∞–≤–ª—è–µ—Ç —Ç–æ–≤–∞—Ä –≤ –≤–∏—à–ª–∏—Å—Ç"""
    if message.from_user.id not in ADMIN_IDS:
        return
    if len(message.text.split()) < 2:
        await message.answer("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ: /add <—Å—Å—ã–ª–∫–∞>")
        return
    link = message.text.split(maxsplit=1)[1]
    wishlist.append({"name": link, "gifted": False})
    await message.answer("‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –≤–∏—à–ª–∏—Å—Ç!", reply_markup=get_wishlist_keyboard())


@dp.message(Command("list"))
async def show_wishlist(message: Message):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –≤–∏—à–ª–∏—Å—Ç"""
    if message.from_user.id not in ADMIN_IDS:
        return
    if not wishlist:
        await message.answer("üéÅ –í–∏—à–ª–∏—Å—Ç –ø—É—Å—Ç!")
    else:
        await message.answer("–í–æ—Ç –≤–∞—à –≤–∏—à–ª–∏—Å—Ç:", reply_markup=get_wishlist_keyboard())


@dp.callback_query()
async def handle_callback(call: CallbackQuery):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
    if call.from_user.id not in ADMIN_IDS:
        return
    if call.data.startswith("toggle_"):
        idx = int(call.data.split("_")[1])
        wishlist[idx]["gifted"] = not wishlist[idx]["gifted"]
        await call.message.edit_reply_markup(reply_markup=get_wishlist_keyboard())
    elif call.data == "clear":
        wishlist.clear()
        await call.message.edit_text("üéÅ –í–∏—à–ª–∏—Å—Ç –æ—á–∏—â–µ–Ω!")


async def main():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
    await dp.start_polling(bot)

if name == "__main__":
    asyncio.run(main())
